name: CI/CD - Nodejs CI with NPM and CD with Docker & AWS EC2

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read


jobs:


  CI-CD:
    runs-on: ubuntu-latest
    steps:
    # 소스코드 다운로드
    - name: Checkout code
      uses: actions/checkout@v3
    # Nodejs 세팅
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.6.0'
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present


    # 어플리케이션 Docker Image 빌드
    - name: Build Docker Image For Node.js
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0 .
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0
    # 서버에서 Docker 이미지 실행
    - name: EC2 Docker Run
      uses: appleboy/ssh-action@master
      with:
        
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu   #우분투   리눅스 시 -> ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        

        script: |
          docker stop docker-practice-app
          docker rm docker-practice-app
          docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0
          docker run -d -p 80:3000 --name docker-practice-app ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0

      # Docker Hub image that `container-job` executes in
    container: '18.6.0'

      # Service containers to run with `container-job`
    services:
        # Label used to access the service container
    redis:
      # Docker Hub image
      image: redis
      # Set health checks to wait until redis has started
      options: >-
        --health-cmd "redis-cli ping"
        --health-interval 10s
        --health-timeout 5s
        --health-retries 5

      steps:
        # Downloads a copy of the code in your repository before running CI tests
        - name: Check out repository code
          uses: actions/checkout@v3

        # Performs a clean installation of all dependencies in the `package.json` file
        # For more information, see https://docs.npmjs.com/cli/ci.html
        - name: Install dependencies
          run: npm ci

        - name: Connect to Redis
          # Runs a script that creates a Redis client, populates
          # the client with data, and retrieves data
          run: node client.js
          # Environment variable used by the `client.js` script to create a new Redis client.
          env:
            # The hostname used to communicate with the Redis service container
            REDIS_HOST: redis
            # The default Redis port
            REDIS_PORT: 6379